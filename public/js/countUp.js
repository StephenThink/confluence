(()=>{function t(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,r){var e=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==e)return;var n,o,u=[],i=!0,a=!1;try{for(e=e.call(t);!(i=(n=e.next()).done)&&(u.push(n.value),!r||u.length!==r);i=!0);}catch(t){a=!0,o=t}finally{try{i||null==e.return||e.return()}finally{if(a)throw o}}return u}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}var e=document.querySelector("#trackMe");new IntersectionObserver((function(r){t(r,1)[0].isIntersecting?setTimeout((function(){var t,r;t=document.querySelectorAll(".counter"),r=250,t.forEach((function(t){!function e(){var n=+t.getAttribute("data-target"),o=+t.innerText,u=n/r;o<n?(t.innerText=Math.ceil(o+u),setTimeout(e,10)):o.innerText=n}()}))}),1250):console.log("no you dont!")}),{root:null,threshold:.6,rootMargin:"-150px"}).observe(e)})();